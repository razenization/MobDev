{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\react\\\\Desktop\\\\univer\\\\mobile\\\\prak\\\\views\\\\FoodView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport VirtualizedList from \"react-native-web/dist/exports/VirtualizedList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { debounce } from 'lodash';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ItemSeparator, Item } from \"../components\";\nimport { getItem, getItemCount, styles } from \"../util\";\nimport { Food } from \"../util/food\";\nexport default function FoodView() {\n  var _this = this;\n\n  var window = Dimensions.get('window');\n  var screen = Dimensions.get('screen');\n\n  var _useState = useState({\n    window: window,\n    screen: screen\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      dimensions = _useState2[0],\n      setDimensions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listItems = _useState4[0],\n      setListItems = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var fetchFood = function fetchFood(search) {\n    var response, result;\n    return _regeneratorRuntime.async(function fetchFood$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(search.length >= 3)) {\n              _context.next = 12;\n              break;\n            }\n\n            setIsLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://trackapi.nutritionix.com/v2/search/instant?query=\" + search, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n                'x-app-key': 'a3bc3d58fc8886699ecd1febe61cd1f5',\n                'x-app-id': '1b35350f'\n              }\n            }));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            result = _context.sent;\n            setIsLoading(false);\n            setListItems(Food.fromCollection(result.branded));\n            _context.next = 13;\n            break;\n\n          case 12:\n            setListItems([]);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onItemDelete = useCallback(function (foodItem) {\n    var index = listItems.indexOf(foodItem);\n    listItems.splice(index, 1);\n  }, [listItems]);\n  var onSearchHandler = useCallback(debounce(function _callee(text) {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetchFood(text));\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, 500), []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.sectionStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: styles.imageStyle,\n    name: \"magnify\",\n    color: '#808082',\n    size: 26,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    onChangeText: function onChangeText(text) {\n      setSearch(text);\n      onSearchHandler(text);\n    },\n    value: search,\n    underlineColorAndroid: \"transparent\",\n    clearButtonMode: 'while-editing',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), isLoading ? React.createElement(View, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })) : null, listItems.length && !isLoading ? React.createElement(VirtualizedList, {\n    data: listItems,\n    initialNumToRender: 4,\n    ItemSeparatorComponent: ItemSeparator,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Item, {\n        item: _objectSpread(_objectSpread({}, item), {}, {\n          onDelete: onItemDelete\n        }),\n        dimensions: {\n          dimensions: dimensions,\n          setDimensions: setDimensions\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    getItemCount: getItemCount,\n    getItem: getItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }) : React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, !search | search.length < 3 ? 'Submit a query longer than 3 symbols to get a list of available books.' : null));\n}","map":{"version":3,"sources":["C:/Users/react/Desktop/univer/mobile/prak/views/FoodView.js"],"names":["React","useState","useEffect","useCallback","debounce","MaterialCommunityIcons","ItemSeparator","Item","getItem","getItemCount","styles","Food","FoodView","window","Dimensions","get","screen","dimensions","setDimensions","listItems","setListItems","search","setSearch","isLoading","setIsLoading","fetchFood","length","fetch","method","headers","response","json","result","fromCollection","branded","onItemDelete","foodItem","index","indexOf","splice","onSearchHandler","text","container","sectionStyle","imageStyle","textInputStyle","marginTop","item","onDelete","id","textAlign"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;;;;;;;AAUA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AAEA,SAASC,aAAT,EAAwBC,IAAxB;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,MAAhC;AACA,SAASC,IAAT;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,MAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AACA,MAAMC,MAAM,GAAGF,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;;AACA,kBAAoCd,QAAQ,CAAC;AAAEY,IAAAA,MAAM,EAANA,MAAF;AAAUG,IAAAA,MAAM,EAANA;AAAV,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,mBAAkCjB,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOkB,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,mBAA4BnB,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOoB,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAkCrB,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOsB,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOJ,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACZA,MAAM,CAACK,MAAP,IAAiB,CADL;AAAA;AAAA;AAAA;;AAEdF,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAFc;AAAA,6CAGSG,KAAK,+DACkCN,MADlC,EAE1B;AACEO,cAAAA,MAAM,EAAE,KADV;AAEEC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEP,6BAAa,kCAFN;AAGP,4BAAY;AAHL;AAFX,aAF0B,CAHd;;AAAA;AAGRC,YAAAA,QAHQ;AAAA;AAAA,6CAeOA,QAAQ,CAACC,IAAT,EAfP;;AAAA;AAeRC,YAAAA,MAfQ;AAgBdR,YAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAJ,YAAAA,YAAY,CAACT,IAAI,CAACsB,cAAL,CAAoBD,MAAM,CAACE,OAA3B,CAAD,CAAZ;AAlBc;AAAA;;AAAA;AAoBdd,YAAAA,YAAY,CAAC,EAAD,CAAZ;;AApBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAwBA,MAAMe,YAAY,GAAGhC,WAAW,CAC9B,UAACiC,QAAD,EAAc;AACZ,QAAMC,KAAK,GAAGlB,SAAS,CAACmB,OAAV,CAAkBF,QAAlB,CAAd;AAEAjB,IAAAA,SAAS,CAACoB,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACD,GAL6B,EAM9B,CAAClB,SAAD,CAN8B,CAAhC;AASA,MAAMqB,eAAe,GAAGrC,WAAW,CACjCC,QAAQ,CAAC,iBAAOqC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAsBhB,SAAS,CAACgB,IAAD,CAA/B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAAwC,GAAxC,CADyB,EAEjC,EAFiC,CAAnC;AAKA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE/B,MAAM,CAACgC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhC,MAAM,CAACiC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAEjC,MAAM,CAACkC,UADhB;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAE,SAHT;AAIE,IAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAElC,MAAM,CAACmC,cADhB;AAEE,IAAA,YAAY,EAAE,sBAACJ,IAAD,EAAU;AACtBnB,MAAAA,SAAS,CAACmB,IAAD,CAAT;AACAD,MAAAA,eAAe,CAACC,IAAD,CAAf;AACD,KALH;AAME,IAAA,KAAK,EAAEpB,MANT;AAOE,IAAA,qBAAqB,EAAC,aAPxB;AAQE,IAAA,eAAe,EAAE,eARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAoBGE,SAAS,GACR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEuB,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GAIN,IAxBN,EA0BG3B,SAAS,CAACO,MAAV,IAAoB,CAACH,SAArB,GACC,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEJ,SADR;AAEE,IAAA,kBAAkB,EAAE,CAFtB;AAGE,IAAA,sBAAsB,EAAEb,aAH1B;AAIE,IAAA,UAAU,EAAE;AAAA,UAAGyC,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AACE,QAAA,IAAI,kCAAOA,IAAP;AAAaC,UAAAA,QAAQ,EAAEb;AAAvB,UADN;AAEE,QAAA,UAAU,EAAE;AAAElB,UAAAA,UAAU,EAAVA,UAAF;AAAcC,UAAAA,aAAa,EAAbA;AAAd,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAJd;AAUE,IAAA,YAAY,EAAE,sBAAC6B,IAAD;AAAA,aAAUA,IAAI,CAACE,EAAf;AAAA,KAVhB;AAWE,IAAA,YAAY,EAAExC,YAXhB;AAYE,IAAA,OAAO,EAAED,OAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAgBC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE0C,MAAAA,SAAS,EAAE,QAAb;AAAuBJ,MAAAA,SAAS,EAAE;AAAlC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACzB,MAAD,GAAWA,MAAM,CAACK,MAAP,GAAgB,CAA3B,GACG,wEADH,GAEG,IAHN,CA1CJ,CADF;AAmDD","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  SafeAreaView,\n  ActivityIndicator,\n  View,\n  VirtualizedList,\n  Text,\n  TextInput,\n  Dimensions,\n} from 'react-native';\nimport { debounce } from 'lodash';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport { ItemSeparator, Item } from '../components';\nimport { getItem, getItemCount, styles } from '../util';\nimport { Food } from '../util/food';\n\nexport default function FoodView() {\n  const window = Dimensions.get('window');\n  const screen = Dimensions.get('screen');\n  const [dimensions, setDimensions] = useState({ window, screen });\n\n  const [listItems, setListItems] = useState([]);\n\n  const [search, setSearch] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchFood = async (search) => {\n    if (search.length >= 3) {\n      setIsLoading(true);\n      const response = await fetch(\n        `https://trackapi.nutritionix.com/v2/search/instant?query=${search}`,\n        {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-app-key': 'a3bc3d58fc8886699ecd1febe61cd1f5',\n            'x-app-id': '1b35350f',\n          },\n        },\n      );\n\n      const result = await response.json();\n      setIsLoading(false);\n\n      setListItems(Food.fromCollection(result.branded));\n    } else {\n      setListItems([]);\n    }\n  };\n\n  const onItemDelete = useCallback(\n    (foodItem) => {\n      const index = listItems.indexOf(foodItem);\n\n      listItems.splice(index, 1);\n    },\n    [listItems],\n  );\n\n  const onSearchHandler = useCallback(\n    debounce(async (text) => await fetchFood(text), 500),\n    [],\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.sectionStyle}>\n        <MaterialCommunityIcons\n          style={styles.imageStyle}\n          name=\"magnify\"\n          color={'#808082'}\n          size={26}\n        />\n        <TextInput\n          style={styles.textInputStyle}\n          onChangeText={(text) => {\n            setSearch(text);\n            onSearchHandler(text);\n          }}\n          value={search}\n          underlineColorAndroid=\"transparent\"\n          clearButtonMode={'while-editing'}\n        />\n      </View>\n\n      {isLoading ? (\n        <View style={{ marginTop: 20 }}>\n          <ActivityIndicator />\n        </View>\n      ) : null}\n\n      {listItems.length && !isLoading ? (\n        <VirtualizedList\n          data={listItems}\n          initialNumToRender={4}\n          ItemSeparatorComponent={ItemSeparator}\n          renderItem={({ item }) => (\n            <Item\n              item={{ ...item, onDelete: onItemDelete }}\n              dimensions={{ dimensions, setDimensions }}\n            />\n          )}\n          keyExtractor={(item) => item.id}\n          getItemCount={getItemCount}\n          getItem={getItem}\n        />\n      ) : (\n        <Text style={{ textAlign: 'center', marginTop: 15 }}>\n          {!search | (search.length < 3)\n            ? 'Submit a query longer than 3 symbols to get a list of available books.'\n            : null}\n        </Text>\n      )}\n    </SafeAreaView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}