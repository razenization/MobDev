{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\react\\\\Desktop\\\\univer\\\\mobile\\\\prak\\\\components\\\\Item.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport { styles, landscape } from \"../util\";\nexport default function Item(props) {\n  var _this = this;\n\n  var _props$item = props.item,\n      foodName = _props$item.foodName,\n      servingUnit = _props$item.servingUnit,\n      calories = _props$item.calories,\n      image = _props$item.image,\n      onDelete = _props$item.onDelete;\n  var _props$dimensions = props.dimensions,\n      dimensions = _props$dimensions.dimensions,\n      setDimensions = _props$dimensions.setDimensions;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  var onDimChange = function onDimChange(_ref) {\n    var window = _ref.window,\n        screen = _ref.screen;\n    setDimensions({\n      window: window,\n      screen: screen\n    });\n  };\n\n  useEffect(function () {\n    Dimensions.addEventListener('change', onDimChange);\n    return function () {\n      Dimensions.removeEventListener('change', onDimChange);\n    };\n  });\n\n  var orientation = function orientation() {\n    if (dimensions.window.height >= dimensions.window.width) {\n      return styles;\n    } else {\n      return landscape;\n    }\n  };\n\n  var LeftActions = function LeftActions() {\n    return React.createElement(View, {\n      style: styles.rightAction,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.actionText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Delete\"));\n  };\n\n  return React.createElement(Swipeable, {\n    renderRightActions: LeftActions,\n    onSwipeableRightOpen: function onSwipeableRightOpen() {\n      onDelete(props.item);\n      setIsVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.item), {}, {\n      display: !isVisible ? 'none' : 'flex'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.imageView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: orientation().image,\n    source: {\n      uri: image\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: orientation().textView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, foodName), React.createElement(Text, {\n    style: styles.specs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Serving unit:\", ' ', \"\\\"\" + (servingUnit[0].toUpperCase() + servingUnit.slice(1)) + \"\\\"\"), React.createElement(Text, {\n    style: styles.specs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Calories: \", calories))));\n}","map":{"version":3,"sources":["C:/Users/react/Desktop/univer/mobile/prak/components/Item.js"],"names":["React","useState","useEffect","Swipeable","styles","landscape","Item","props","item","foodName","servingUnit","calories","image","onDelete","dimensions","setDimensions","isVisible","setIsVisible","onDimChange","window","screen","Dimensions","addEventListener","removeEventListener","orientation","height","width","LeftActions","rightAction","actionText","display","imageView","uri","textView","title","specs","toUpperCase","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Dimensions, View, Text, Image } from 'react-native';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nimport { styles, landscape } from '../util';\n\nexport default function Item(props) {\n  const { foodName, servingUnit, calories, image, onDelete } = props.item;\n  const { dimensions, setDimensions } = props.dimensions;\n\n  const [isVisible, setIsVisible] = useState(true);\n\n  const onDimChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener('change', onDimChange);\n    return () => {\n      Dimensions.removeEventListener('change', onDimChange);\n    };\n  });\n\n  const orientation = () => {\n    if (dimensions.window.height >= dimensions.window.width) {\n      return styles;\n    } else {\n      return landscape;\n    }\n  };\n\n  const LeftActions = () => {\n    return (\n      <View style={styles.rightAction}>\n        <Text style={styles.actionText}>Delete</Text>\n      </View>\n    );\n  };\n\n  return (\n    <Swipeable\n      renderRightActions={LeftActions}\n      onSwipeableRightOpen={() => {\n        onDelete(props.item);\n        setIsVisible(false);\n      }}\n    >\n      <View style={{ ...styles.item, display: !isVisible ? 'none' : 'flex' }}>\n        <View style={styles.imageView}>\n          <Image\n            style={orientation().image}\n            source={{\n              uri: image,\n            }}\n          />\n        </View>\n        <View style={orientation().textView}>\n          <Text numberOfLines={1} style={styles.title}>\n            {foodName}\n          </Text>\n          <Text style={styles.specs}>\n            Serving unit:{' '}\n            {`\"${servingUnit[0].toUpperCase() + servingUnit.slice(1)}\"`}\n          </Text>\n          <Text style={styles.specs}>Calories: {calories}</Text>\n        </View>\n      </View>\n    </Swipeable>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}